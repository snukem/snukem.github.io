name: Deploy Site

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  set-deploy-type:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.set-output.outputs.target }}
    steps:
      - uses: actions/checkout@v4

      - name: get deployment target
        run: |
          TARGET=$(cat DEPLOY_STRATEGY)
          echo "TARGET=$TARGET" >> $GITHUB_ENV

      - name: check if target is valid
        if: success() && !contains(fromJSON('["gh-pages", "firebase", "none"]'), env.TARGET)
        run: echo 'Invalid Deployment Target' && exit 1

      # gh actions doesn't support using the 'env' context on job level ifs for
      # some reason smh. here we use outputs instead
      - name: set output to deploy target
        id: set-output
        run: echo "::set-output name=target::${{ env.TARGET }}"

  deploy-none:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'none'
    steps:
      - run: echo 'No Deployment Specified' && exit 0

  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'gh-pages'
    environment:
      name: github-pages # Required for GitHub Pages deployments
      url: ${{ steps.deployment.outputs.page_url }} # This will link to your deployed site

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        # Use a specific Ruby version that matches your local environment (from Gemfile.lock)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4' # Matches your Gemfile.lock's Ruby version
          bundler-cache: true # Caches and installs gems based on Gemfile.lock

      - name: Build Jekyll site
        run: bundle exec jekyll build # This runs Jekyll using your installed gems

      - name: Upload Pages artifact
        # This action takes the '_site' directory (Jekyll's output) and prepares it for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      - name: Deploy to GitHub Pages
        id: deployment # Gives this step an ID to reference its outputs
        uses: actions/deploy-pages@v4 # The official GitHub Pages deployment action

  deploy-firebase:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'firebase'

    steps:
      - uses: actions/checkout@v4

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: build jekyll
        run: |
          bundle install
          bundle exec jekyll build

      - name: deploy to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
