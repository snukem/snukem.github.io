name: Deploy Site

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  set-deploy-type:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.set-output.outputs.target }}
    steps:
      - uses: actions/checkout@v4

      - name: get deployment target
        run: |
          TARGET=$(cat DEPLOY_STRATEGY)
          echo "TARGET=$TARGET" >> $GITHUB_ENV

      - name: check if target is valid
        if: success() && !contains(fromJSON('["gh-pages", "firebase", "none"]'), env.TARGET)
        run: echo 'Invalid Deployment Target' && exit 1

      - name: set output to deploy target
        id: set-output
        run: echo "target=${{ env.TARGET }}" >> $GITHUB_OUTPUT

  deploy-none:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'none'
    steps:
      - run: echo 'No Deployment Specified' && exit 0

  deploy-gh-pages:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'gh-pages'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write # This is the new line you need
      pages: write # Also need pages: write for deployment
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true

      # --- DEBUGGING STEPS START HERE ---
      - name: Debug - Show current directory and its contents before build
        run: |
          echo "Current working directory: $(pwd)"
          echo "Files and directories in current working directory:"
          ls -F
          echo "--- End of pre-build directory listing ---"

      - name: Build Jekyll site
        # Adding --trace and --verbose to get more detailed output in case of failure
        run: bundle exec jekyll build --trace --verbose

      - name: Debug - Show contents of current directory and _site after build
        run: |
          echo "Current working directory after build: $(pwd)"
          echo "Files and directories in current working directory after build:"
          ls -F
          echo "--- Checking for _site directory ---"
          if [ -d "_site" ]; then
            echo "_site directory exists. Contents:"
            ls -F _site/
          else
            echo "_site directory DOES NOT exist."
          fi
          echo "--- End of post-build directory listing ---"
      # --- DEBUGGING STEPS END HERE ---

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site' # This path MUST exist after the build step

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-firebase:
    runs-on: ubuntu-latest
    needs: set-deploy-type
    if: needs.set-deploy-type.outputs.target == 'firebase'

    steps:
      - uses: actions/checkout@v4

      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: build jekyll
        run: |
          bundle install
          bundle exec jekyll build

      - name: deploy to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
            FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
            PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
